<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net8.0-android;net8.0-ios;net8.0-maccatalyst</TargetFrameworks>
		<TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net8.0-windows10.0.19041.0</TargetFrameworks>
		<!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
		<!-- <TargetFrameworks>$(TargetFrameworks);net8.0-tizen</TargetFrameworks> -->
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>

		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">11.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">13.1</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.Maui.Controls" Version="$(MauiVersion)" />
		<PackageReference Include="Microsoft.Maui.Controls.Compatibility" Version="$(MauiVersion)" />
	</ItemGroup>

	<ItemGroup>
		<!--<PackageReference Include="MonoGame.Content.Builder.Task" Version="3.8.4" />-->
		
		<!-- Package for Android only -->
		<PackageReference Include="MonoGame.Framework.Android" Version="3.8.4" Condition="'$(TargetFramework)'=='net8.0-android'" />

		<!-- Package for iOS only -->
		<PackageReference Include="MonoGame.Framework.iOS" Version="3.8.4" Condition="'$(TargetFramework)'=='net8.0-ios'" />
		
		<!-- Package for Windows only -->
		<PackageReference Include="MonoGame.Framework.DesktopGL" Version="3.8.4" Condition="'$(TargetFramework)'=='net8.0-windows10.0.19041.0'" />
						  
		<!-- Package for Mac only -->
		<PackageReference Include="MonoGame.Framework.DesktopGL" Version="3.8.4" Condition="'$(TargetFramework)'=='net8.0-maccatalyst'" />
	</ItemGroup>

	<PropertyGroup>
		<EnableMgcbInVs>false</EnableMgcbInVs>
	</PropertyGroup>

	<ItemGroup Condition="'$(EnableMgcbInVs)' == 'true'">
		<PackageReference Include="MonoGame.Content.Builder.Task" Version="3.8.4" />
	</ItemGroup>

	<ItemGroup Condition="'$(EnableMgcbInVs)' == 'true'">
		<MonoGameContentReference Include="Content/Content.mgcb" />
	</ItemGroup>

	<!-- Android -->
	<PropertyGroup Condition="$(TargetFramework.Contains('-android'))">
		<MonoGamePlatform>Android</MonoGamePlatform>
	</PropertyGroup>

	<ItemGroup Condition="$(TargetFramework.Contains('-android'))">
		<!-- MGCB default output layout: Content/bin/{Platform}/Content/** -->
		<AndroidAsset Include="Content\bin\$(MonoGamePlatform)\Content\**\*.*"
					  LogicalName="Content\%(RecursiveDir)%(Filename)%(Extension)" />
	</ItemGroup>

	<!-- Windows -->
	<PropertyGroup Condition="$(TargetFramework.Contains('-windows'))">
		<MonoGamePlatform>Windows</MonoGamePlatform>
	</PropertyGroup>

	<ItemGroup Condition="$(TargetFramework.Contains('-windows'))">
		<Content Include="Content\bin\$(MonoGamePlatform)\Content\**\*.*">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<Link>Content\%(RecursiveDir)%(Filename)%(Extension)</Link>
		</Content>
	</ItemGroup>

	<!-- iOS -->
	<PropertyGroup Condition="$(TargetFramework.Contains('-ios'))">
		<!-- Build iOS-flavored content (OpenGLES profile for effects) -->
		<MonoGamePlatform>iOS</MonoGamePlatform>
	</PropertyGroup>

	<ItemGroup Condition="$(TargetFramework.Contains('-ios'))">
		<!-- Put compiled .xnb files into the app bundle at Content/... -->
		<BundleResource Include="Content\bin\$(MonoGamePlatform)\Content\**\*.*">
			<LogicalName>Content\%(RecursiveDir)%(Filename)%(Extension)</LogicalName>
		</BundleResource>
	</ItemGroup>

	<!-- MacCatalyst -->
	<PropertyGroup Condition="$(TargetFramework.Contains('-maccatalyst'))">
		<!-- Reuse iOS content profile for MacCatalyst -->
		<MonoGamePlatform>iOS</MonoGamePlatform>
	</PropertyGroup>

	<ItemGroup Condition="$(TargetFramework.Contains('-maccatalyst'))">
		<BundleResource Include="Content\bin\$(MonoGamePlatform)\Content\**\*.*">
			<LogicalName>Content\%(RecursiveDir)%(Filename)%(Extension)</LogicalName>
		</BundleResource>
	</ItemGroup>

</Project>
